services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alienworlds-pools
    networks:
      - monitoring
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app

    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=240y'  # Храним данные только за 24 часа для экономии ресурсов
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G
    depends_on:
      - app

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - monitoring
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=100ms
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: